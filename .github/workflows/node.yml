name: Node CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    name: Build and test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      # cache the ASDF directory, using the values from .tool-versions
      - name: ASDF cache
        uses: actions/cache@v2
        with:
          path: ~/.asdf
          key: ${{ runner.os }}-asdf-v2-${{ hashFiles('.tool-versions') }}
        id: asdf-cache
      # only run `asdf install` if we didn't hit the cache
      - uses: asdf-vm/actions/install@v1
        if: steps.asdf-cache.outputs.cache-hit != 'true'
      # if we did hit the cache, set up the environment
      - name: Setup ASDF environment
        run: |
          echo "ASDF_DIR=$HOME/.asdf" >> $GITHUB_ENV
          echo "ASDF_DATA_DIR=$HOME/.asdf" >> $GITHUB_ENV
        if: steps.asdf-cache.outputs.cache-hit == 'true'
      - name: Reshim ASDF
        run: |
          echo "$ASDF_DIR/bin" >> $GITHUB_PATH
          echo "$ASDF_DIR/shims" >> $GITHUB_PATH
          $ASDF_DIR/bin/asdf reshim
      - name: Restore mix dependencies cache
        uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-
      - name: Install mix dependencies
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
      - name: Restore yarn dependencies cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn
      - name: tests
        run: yarn test
      - name: webpack compiles fine
        run: webpack --mode production